#Diseño

##Palabras reservadas
* Comentarios: -- | // | #
* instrucciones
    * for
    * in
    * while
    * do
    * if
    * else

    * print
    * read
* union
* ;
* +
* -
* *
* /
* ^
* <
* >
* <=
* >=
* ==
* /=
*
* { }
* ( )
* [ ]

##Decisiones
* existe la instruccion vacía

###Tipos
* Int
* Float
* Char
* String -- [Char]
* Array




***

#Lenguaje de programación SUPERCOOL

SUPERCOOL es un lenguaje de programación de uso general desarrollado para la cadena de Lenguajes de Programación de la USB. El lenguaje es imperativo, con funciones, recursividad, comentarios, y de más.

##Estructura de un programa

Un programa en SUPERCOOL tiene la siguiente estructura:

    [<instrucciones>]

Es una lista de instrucciones a ejecutar una tras otra. Un ejemplo de un programa básico en SUPERCOOL es:

    for i in [1..10] {
        print("numero: " ++ string(i) ++ "\n")
    }

##Identificadores

Un identificador en SUPERCOOL consiste de una cadena de caracteres de cualquier longitud que comienza por una letra minúscula (a-z), y es seguido por letras minúsculas (a-z), letras mayúscula (A-Z), dígitos (0-9) o el caracter guión bajo (_).

##Tipos de datos

Se dispone de los siguientes tipos de datos:
* `Void`: vacio, para funciones que no devuelven valores (aka "procedimientos").
* `Int`: números enteros con signo de N bits.
* `Bool`: representa un valor booleano o lógico, es decir `true` o `false`.
* `Float`: números flotantes de N bits, precisión y tal...
* `Char`: caracteres, UTF-8.
* `String`: cadenas de caracteres, escencialmente `[Char]`
* `[Array]`: arreglos de los otros tipos, no se permiten `[Void]`
* `def(Int,Bool) :: Void`: funciones, debe especificarse los tipos de entrada y salida.

##Instrucciones

###Asignación

    <variable> = <expresión>
