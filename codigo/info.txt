-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.3 from Parser.y
-----------------------------------------------------------------------------


rule 8 is unused
rule 9 is unused
rule 10 is unused
rule 11 is unused
rule 12 is unused
rule 13 is unused
rule 14 is unused
rule 15 is unused
rule 16 is unused
rule 42 is unused
rule 43 is unused

terminal "main" is unused
terminal "begin" is unused
terminal "end" is unused
terminal "return" is unused
terminal "," is unused
terminal "(" is unused
terminal ")" is unused
terminal "[" is unused
terminal "]" is unused
terminal "{" is unused
terminal "}" is unused
terminal "Void" is unused
terminal "Int" is unused
terminal "Bool" is unused
terminal "Float" is unused
terminal "Char" is unused
terminal "String" is unused
terminal "Range" is unused
terminal "Union" is unused
terminal "Record" is unused
terminal "Type" is unused
terminal "def" is unused
terminal "as" is unused
terminal "::" is unused
terminal "->" is unused
terminal "read" is unused
terminal "print" is unused
terminal "if" is unused
terminal "then" is unused
terminal "else" is unused
terminal "unless" is unused
terminal "case" is unused
terminal "when" is unused
terminal "for" is unused
terminal "in" is unused
terminal "do" is unused
terminal "while" is unused
terminal "until" is unused
terminal "break" is unused
terminal "continue" is unused
terminal typeid is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Program                            (0)
	Program -> StatementList                           (1)
	StatementList -> Statement                         (2)
	StatementList -> StatementList Separator Statement   (3)
	Statement ->                                       (4)
	Statement -> varid "=" Expression                  (5)
	Separator -> ";"                                   (6)
	Separator -> newline                               (7)
	DataType -> "Int"                                  (8)
	DataType -> "Float"                                (9)
	DataType -> "Bool"                                 (10)
	DataType -> "Char"                                 (11)
	DataType -> "String"                               (12)
	DataType -> "Range"                                (13)
	DataType -> "Type"                                 (14)
	VariableList -> varid                              (15)
	VariableList -> VariableList "," varid             (16)
	Expression -> varid                                (17)
	Expression -> int                                  (18)
	Expression -> float                                (19)
	Expression -> "true"                               (20)
	Expression -> "false"                              (21)
	Expression -> char                                 (22)
	Expression -> string                               (23)
	Expression -> Expression "+" Expression            (24)
	Expression -> Expression "-" Expression            (25)
	Expression -> Expression "*" Expression            (26)
	Expression -> Expression "/" Expression            (27)
	Expression -> Expression "%" Expression            (28)
	Expression -> Expression "^" Expression            (29)
	Expression -> Expression ".." Expression           (30)
	Expression -> Expression "or" Expression           (31)
	Expression -> Expression "and" Expression          (32)
	Expression -> Expression "==" Expression           (33)
	Expression -> Expression "/=" Expression           (34)
	Expression -> Expression "<" Expression            (35)
	Expression -> Expression "<=" Expression           (36)
	Expression -> Expression ">" Expression            (37)
	Expression -> Expression ">=" Expression           (38)
	Expression -> Expression "@" Expression            (39)
	Expression -> "-" Expression                       (40)
	Expression -> "not" Expression                     (41)
	ExpressionList -> Expression                       (42)
	ExpressionList -> ExpressionList Separator Expression   (43)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	newline        { TkNewLine }
	"main"         { TkMain }
	"begin"        { TkBegin }
	"end"          { TkEnd }
	"return"       { TkReturn }
	";"            { TkSemicolon }
	","            { TkComma }
	"("            { TkLParen }
	")"            { TkRParen }
	"["            { TkLBrackets }
	"]"            { TkRBrackets }
	"{"            { TkLBraces }
	"}"            { TkRBraces }
	"Void"         { TkVoidType }
	"Int"          { TkIntType }
	"Bool"         { TkBoolType }
	"Float"        { TkFloatType }
	"Char"         { TkCharType }
	"String"       { TkStringType }
	"Range"        { TkRangeType }
	"Union"        { TkUnionType }
	"Record"       { TkRecordType }
	"Type"         { TkTypeType }
	"="            { TkAssign }
	"def"          { TkDef }
	"as"           { TkAs }
	"::"           { TkSignature }
	"->"           { TkArrow }
	"read"         { TkRead }
	"print"        { TkPrint }
	"if"           { TkIf }
	"then"         { TkThen }
	"else"         { TkElse }
	"unless"       { TkUnless }
	"case"         { TkCase }
	"when"         { TkWhen }
	"for"          { TkFor }
	"in"           { TkIn }
	".."           { TkFromTo }
	"do"           { TkDo }
	"while"        { TkWhile }
	"until"        { TkUntil }
	"break"        { TkBreak }
	"continue"     { TkContinue }
	int            { TkInt    $$ }
	"true"         { TkTrue   $$ }
	"false"        { TkFalse  $$ }
	float          { TkFloat  $$ }
	string         { TkString $$ }
	char           { TkChar   $$ }
	"+"            { TkPlus }
	"-"            { TkMinus }
	"*"            { TkTimes }
	"/"            { TkDivide }
	"%"            { TkModulo }
	"^"            { TkPower }
	"or"           { TkOr }
	"and"          { TkAnd }
	"not"          { TkNot }
	"@"            { TkBelongs }
	"=="           { TkEqual }
	"/="           { TkUnequal }
	"<"            { TkLess }
	">"            { TkGreat }
	"<="           { TkLessEq }
	">="           { TkGreatEq }
	varid          { TkVarId  $$ }
	typeid         { TkTypeId $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Program         rule  1
	StatementList   rules 2, 3
	Statement       rules 4, 5
	Separator       rules 6, 7
	DataType        rules 8, 9, 10, 11, 12, 13, 14
	VariableList    rules 15, 16
	Expression      rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41
	ExpressionList  rules 42, 43

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	newline        reduce using rule 4
	";"            reduce using rule 4
	varid          shift, and enter state 4
	%eof           reduce using rule 4

	Program        goto state 5
	StatementList  goto state 2
	Statement      goto state 3

State 1


	varid          shift, and enter state 4

	StatementList  goto state 2
	Statement      goto state 3

State 2

	Program -> StatementList .                          (rule 1)
	StatementList -> StatementList . Separator Statement    (rule 3)

	newline        shift, and enter state 8
	";"            shift, and enter state 9
	%eof           reduce using rule 1

	Separator      goto state 7

State 3

	StatementList -> Statement .                        (rule 2)

	newline        reduce using rule 2
	";"            reduce using rule 2
	%eof           reduce using rule 2


State 4

	Statement -> varid . "=" Expression                 (rule 5)

	"="            shift, and enter state 6


State 5

	%start_parse -> Program .                           (rule 0)

	%eof           accept


State 6

	Statement -> varid "=" . Expression                 (rule 5)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 11

State 7

	StatementList -> StatementList Separator . Statement    (rule 3)

	newline        reduce using rule 4
	";"            reduce using rule 4
	varid          shift, and enter state 4
	%eof           reduce using rule 4

	Statement      goto state 10

State 8

	Separator -> newline .                              (rule 7)

	newline        reduce using rule 7
	";"            reduce using rule 7
	varid          reduce using rule 7
	%eof           reduce using rule 7


State 9

	Separator -> ";" .                                  (rule 6)

	newline        reduce using rule 6
	";"            reduce using rule 6
	varid          reduce using rule 6
	%eof           reduce using rule 6


State 10

	StatementList -> StatementList Separator Statement .    (rule 3)

	newline        reduce using rule 3
	";"            reduce using rule 3
	%eof           reduce using rule 3


State 11

	Statement -> varid "=" Expression .                 (rule 5)
	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 5
	";"            reduce using rule 5
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           shift, and enter state 30
	"and"          shift, and enter state 31
	"@"            shift, and enter state 32
	"=="           shift, and enter state 33
	"/="           shift, and enter state 34
	"<"            shift, and enter state 35
	">"            shift, and enter state 36
	"<="           shift, and enter state 37
	">="           shift, and enter state 38
	%eof           reduce using rule 5


State 12

	Expression -> int .                                 (rule 18)

	newline        reduce using rule 18
	";"            reduce using rule 18
	".."           reduce using rule 18
	"+"            reduce using rule 18
	"-"            reduce using rule 18
	"*"            reduce using rule 18
	"/"            reduce using rule 18
	"%"            reduce using rule 18
	"^"            reduce using rule 18
	"or"           reduce using rule 18
	"and"          reduce using rule 18
	"@"            reduce using rule 18
	"=="           reduce using rule 18
	"/="           reduce using rule 18
	"<"            reduce using rule 18
	">"            reduce using rule 18
	"<="           reduce using rule 18
	">="           reduce using rule 18
	%eof           reduce using rule 18


State 13

	Expression -> "true" .                              (rule 20)

	newline        reduce using rule 20
	";"            reduce using rule 20
	".."           reduce using rule 20
	"+"            reduce using rule 20
	"-"            reduce using rule 20
	"*"            reduce using rule 20
	"/"            reduce using rule 20
	"%"            reduce using rule 20
	"^"            reduce using rule 20
	"or"           reduce using rule 20
	"and"          reduce using rule 20
	"@"            reduce using rule 20
	"=="           reduce using rule 20
	"/="           reduce using rule 20
	"<"            reduce using rule 20
	">"            reduce using rule 20
	"<="           reduce using rule 20
	">="           reduce using rule 20
	%eof           reduce using rule 20


State 14

	Expression -> "false" .                             (rule 21)

	newline        reduce using rule 21
	";"            reduce using rule 21
	".."           reduce using rule 21
	"+"            reduce using rule 21
	"-"            reduce using rule 21
	"*"            reduce using rule 21
	"/"            reduce using rule 21
	"%"            reduce using rule 21
	"^"            reduce using rule 21
	"or"           reduce using rule 21
	"and"          reduce using rule 21
	"@"            reduce using rule 21
	"=="           reduce using rule 21
	"/="           reduce using rule 21
	"<"            reduce using rule 21
	">"            reduce using rule 21
	"<="           reduce using rule 21
	">="           reduce using rule 21
	%eof           reduce using rule 21


State 15

	Expression -> float .                               (rule 19)

	newline        reduce using rule 19
	";"            reduce using rule 19
	".."           reduce using rule 19
	"+"            reduce using rule 19
	"-"            reduce using rule 19
	"*"            reduce using rule 19
	"/"            reduce using rule 19
	"%"            reduce using rule 19
	"^"            reduce using rule 19
	"or"           reduce using rule 19
	"and"          reduce using rule 19
	"@"            reduce using rule 19
	"=="           reduce using rule 19
	"/="           reduce using rule 19
	"<"            reduce using rule 19
	">"            reduce using rule 19
	"<="           reduce using rule 19
	">="           reduce using rule 19
	%eof           reduce using rule 19


State 16

	Expression -> string .                              (rule 23)

	newline        reduce using rule 23
	";"            reduce using rule 23
	".."           reduce using rule 23
	"+"            reduce using rule 23
	"-"            reduce using rule 23
	"*"            reduce using rule 23
	"/"            reduce using rule 23
	"%"            reduce using rule 23
	"^"            reduce using rule 23
	"or"           reduce using rule 23
	"and"          reduce using rule 23
	"@"            reduce using rule 23
	"=="           reduce using rule 23
	"/="           reduce using rule 23
	"<"            reduce using rule 23
	">"            reduce using rule 23
	"<="           reduce using rule 23
	">="           reduce using rule 23
	%eof           reduce using rule 23


State 17

	Expression -> char .                                (rule 22)

	newline        reduce using rule 22
	";"            reduce using rule 22
	".."           reduce using rule 22
	"+"            reduce using rule 22
	"-"            reduce using rule 22
	"*"            reduce using rule 22
	"/"            reduce using rule 22
	"%"            reduce using rule 22
	"^"            reduce using rule 22
	"or"           reduce using rule 22
	"and"          reduce using rule 22
	"@"            reduce using rule 22
	"=="           reduce using rule 22
	"/="           reduce using rule 22
	"<"            reduce using rule 22
	">"            reduce using rule 22
	"<="           reduce using rule 22
	">="           reduce using rule 22
	%eof           reduce using rule 22


State 18

	Expression -> "-" . Expression                      (rule 40)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 22

State 19

	Expression -> "not" . Expression                    (rule 41)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 21

State 20

	Expression -> varid .                               (rule 17)

	newline        reduce using rule 17
	";"            reduce using rule 17
	".."           reduce using rule 17
	"+"            reduce using rule 17
	"-"            reduce using rule 17
	"*"            reduce using rule 17
	"/"            reduce using rule 17
	"%"            reduce using rule 17
	"^"            reduce using rule 17
	"or"           reduce using rule 17
	"and"          reduce using rule 17
	"@"            reduce using rule 17
	"=="           reduce using rule 17
	"/="           reduce using rule 17
	"<"            reduce using rule 17
	">"            reduce using rule 17
	"<="           reduce using rule 17
	">="           reduce using rule 17
	%eof           reduce using rule 17


State 21

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)
	Expression -> "not" Expression .                    (rule 41)

	newline        reduce using rule 41
	";"            reduce using rule 41
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 41
	"and"          reduce using rule 41
	"@"            shift, and enter state 32
	"=="           shift, and enter state 33
	"/="           shift, and enter state 34
	"<"            shift, and enter state 35
	">"            shift, and enter state 36
	"<="           shift, and enter state 37
	">="           shift, and enter state 38
	%eof           reduce using rule 41


State 22

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)
	Expression -> "-" Expression .                      (rule 40)

	newline        reduce using rule 40
	";"            reduce using rule 40
	".."           shift, and enter state 23
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 40
	"and"          reduce using rule 40
	"@"            reduce using rule 40
	"=="           reduce using rule 40
	"/="           reduce using rule 40
	"<"            reduce using rule 40
	">"            reduce using rule 40
	"<="           reduce using rule 40
	">="           reduce using rule 40
	%eof           reduce using rule 40


State 23

	Expression -> Expression ".." . Expression          (rule 30)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 54

State 24

	Expression -> Expression "+" . Expression           (rule 24)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 53

State 25

	Expression -> Expression "-" . Expression           (rule 25)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 52

State 26

	Expression -> Expression "*" . Expression           (rule 26)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 51

State 27

	Expression -> Expression "/" . Expression           (rule 27)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 50

State 28

	Expression -> Expression "%" . Expression           (rule 28)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 49

State 29

	Expression -> Expression "^" . Expression           (rule 29)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 48

State 30

	Expression -> Expression "or" . Expression          (rule 31)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 47

State 31

	Expression -> Expression "and" . Expression         (rule 32)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 46

State 32

	Expression -> Expression "@" . Expression           (rule 39)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 45

State 33

	Expression -> Expression "==" . Expression          (rule 33)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 44

State 34

	Expression -> Expression "/=" . Expression          (rule 34)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 43

State 35

	Expression -> Expression "<" . Expression           (rule 35)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 42

State 36

	Expression -> Expression ">" . Expression           (rule 37)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 41

State 37

	Expression -> Expression "<=" . Expression          (rule 36)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 40

State 38

	Expression -> Expression ">=" . Expression          (rule 38)

	int            shift, and enter state 12
	"true"         shift, and enter state 13
	"false"        shift, and enter state 14
	float          shift, and enter state 15
	string         shift, and enter state 16
	char           shift, and enter state 17
	"-"            shift, and enter state 18
	"not"          shift, and enter state 19
	varid          shift, and enter state 20

	Expression     goto state 39

State 39

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression ">=" Expression .          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 38
	";"            reduce using rule 38
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 38
	"and"          reduce using rule 38
	"@"            reduce using rule 38
	"=="           reduce using rule 38
	"/="           reduce using rule 38
	"<"            fail
	">"            fail
	"<="           fail
	">="           fail
	%eof           reduce using rule 38


State 40

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression "<=" Expression .          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 36
	";"            reduce using rule 36
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 36
	"and"          reduce using rule 36
	"@"            reduce using rule 36
	"=="           reduce using rule 36
	"/="           reduce using rule 36
	"<"            fail
	">"            fail
	"<="           fail
	">="           fail
	%eof           reduce using rule 36


State 41

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression ">" Expression .           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 37
	";"            reduce using rule 37
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 37
	"and"          reduce using rule 37
	"@"            reduce using rule 37
	"=="           reduce using rule 37
	"/="           reduce using rule 37
	"<"            fail
	">"            fail
	"<="           fail
	">="           fail
	%eof           reduce using rule 37


State 42

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression "<" Expression .           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 35
	";"            reduce using rule 35
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 35
	"and"          reduce using rule 35
	"@"            reduce using rule 35
	"=="           reduce using rule 35
	"/="           reduce using rule 35
	"<"            fail
	">"            fail
	"<="           fail
	">="           fail
	%eof           reduce using rule 35


State 43

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression "/=" Expression .          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 34
	";"            reduce using rule 34
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 34
	"and"          reduce using rule 34
	"@"            reduce using rule 34
	"=="           fail
	"/="           fail
	"<"            shift, and enter state 35
	">"            shift, and enter state 36
	"<="           shift, and enter state 37
	">="           shift, and enter state 38
	%eof           reduce using rule 34


State 44

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression "==" Expression .          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 33
	";"            reduce using rule 33
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 33
	"and"          reduce using rule 33
	"@"            reduce using rule 33
	"=="           fail
	"/="           fail
	"<"            shift, and enter state 35
	">"            shift, and enter state 36
	"<="           shift, and enter state 37
	">="           shift, and enter state 38
	%eof           reduce using rule 33


State 45

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)
	Expression -> Expression "@" Expression .           (rule 39)

	newline        reduce using rule 39
	";"            reduce using rule 39
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 39
	"and"          reduce using rule 39
	"@"            fail
	"=="           shift, and enter state 33
	"/="           shift, and enter state 34
	"<"            shift, and enter state 35
	">"            shift, and enter state 36
	"<="           shift, and enter state 37
	">="           shift, and enter state 38
	%eof           reduce using rule 39


State 46

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression "and" Expression .         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 32
	";"            reduce using rule 32
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 32
	"and"          reduce using rule 32
	"@"            shift, and enter state 32
	"=="           shift, and enter state 33
	"/="           shift, and enter state 34
	"<"            shift, and enter state 35
	">"            shift, and enter state 36
	"<="           shift, and enter state 37
	">="           shift, and enter state 38
	%eof           reduce using rule 32


State 47

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression "or" Expression .          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 31
	";"            reduce using rule 31
	".."           shift, and enter state 23
	"+"            shift, and enter state 24
	"-"            shift, and enter state 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 31
	"and"          shift, and enter state 31
	"@"            shift, and enter state 32
	"=="           shift, and enter state 33
	"/="           shift, and enter state 34
	"<"            shift, and enter state 35
	">"            shift, and enter state 36
	"<="           shift, and enter state 37
	">="           shift, and enter state 38
	%eof           reduce using rule 31


State 48

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression "^" Expression .           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 29
	";"            reduce using rule 29
	".."           reduce using rule 29
	"+"            reduce using rule 29
	"-"            reduce using rule 29
	"*"            reduce using rule 29
	"/"            reduce using rule 29
	"%"            reduce using rule 29
	"^"            shift, and enter state 29
	"or"           reduce using rule 29
	"and"          reduce using rule 29
	"@"            reduce using rule 29
	"=="           reduce using rule 29
	"/="           reduce using rule 29
	"<"            reduce using rule 29
	">"            reduce using rule 29
	"<="           reduce using rule 29
	">="           reduce using rule 29
	%eof           reduce using rule 29


State 49

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression "%" Expression .           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 28
	";"            reduce using rule 28
	".."           shift, and enter state 23
	"+"            reduce using rule 28
	"-"            reduce using rule 28
	"*"            reduce using rule 28
	"/"            reduce using rule 28
	"%"            reduce using rule 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 28
	"and"          reduce using rule 28
	"@"            reduce using rule 28
	"=="           reduce using rule 28
	"/="           reduce using rule 28
	"<"            reduce using rule 28
	">"            reduce using rule 28
	"<="           reduce using rule 28
	">="           reduce using rule 28
	%eof           reduce using rule 28


State 50

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression "/" Expression .           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 27
	";"            reduce using rule 27
	".."           shift, and enter state 23
	"+"            reduce using rule 27
	"-"            reduce using rule 27
	"*"            reduce using rule 27
	"/"            reduce using rule 27
	"%"            reduce using rule 27
	"^"            shift, and enter state 29
	"or"           reduce using rule 27
	"and"          reduce using rule 27
	"@"            reduce using rule 27
	"=="           reduce using rule 27
	"/="           reduce using rule 27
	"<"            reduce using rule 27
	">"            reduce using rule 27
	"<="           reduce using rule 27
	">="           reduce using rule 27
	%eof           reduce using rule 27


State 51

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression "*" Expression .           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 26
	";"            reduce using rule 26
	".."           shift, and enter state 23
	"+"            reduce using rule 26
	"-"            reduce using rule 26
	"*"            reduce using rule 26
	"/"            reduce using rule 26
	"%"            reduce using rule 26
	"^"            shift, and enter state 29
	"or"           reduce using rule 26
	"and"          reduce using rule 26
	"@"            reduce using rule 26
	"=="           reduce using rule 26
	"/="           reduce using rule 26
	"<"            reduce using rule 26
	">"            reduce using rule 26
	"<="           reduce using rule 26
	">="           reduce using rule 26
	%eof           reduce using rule 26


State 52

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression "-" Expression .           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 25
	";"            reduce using rule 25
	".."           shift, and enter state 23
	"+"            reduce using rule 25
	"-"            reduce using rule 25
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 25
	"and"          reduce using rule 25
	"@"            reduce using rule 25
	"=="           reduce using rule 25
	"/="           reduce using rule 25
	"<"            reduce using rule 25
	">"            reduce using rule 25
	"<="           reduce using rule 25
	">="           reduce using rule 25
	%eof           reduce using rule 25


State 53

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression "+" Expression .           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 24
	";"            reduce using rule 24
	".."           shift, and enter state 23
	"+"            reduce using rule 24
	"-"            reduce using rule 24
	"*"            shift, and enter state 26
	"/"            shift, and enter state 27
	"%"            shift, and enter state 28
	"^"            shift, and enter state 29
	"or"           reduce using rule 24
	"and"          reduce using rule 24
	"@"            reduce using rule 24
	"=="           reduce using rule 24
	"/="           reduce using rule 24
	"<"            reduce using rule 24
	">"            reduce using rule 24
	"<="           reduce using rule 24
	">="           reduce using rule 24
	%eof           reduce using rule 24


State 54

	Expression -> Expression . "+" Expression           (rule 24)
	Expression -> Expression . "-" Expression           (rule 25)
	Expression -> Expression . "*" Expression           (rule 26)
	Expression -> Expression . "/" Expression           (rule 27)
	Expression -> Expression . "%" Expression           (rule 28)
	Expression -> Expression . "^" Expression           (rule 29)
	Expression -> Expression . ".." Expression          (rule 30)
	Expression -> Expression ".." Expression .          (rule 30)
	Expression -> Expression . "or" Expression          (rule 31)
	Expression -> Expression . "and" Expression         (rule 32)
	Expression -> Expression . "==" Expression          (rule 33)
	Expression -> Expression . "/=" Expression          (rule 34)
	Expression -> Expression . "<" Expression           (rule 35)
	Expression -> Expression . "<=" Expression          (rule 36)
	Expression -> Expression . ">" Expression           (rule 37)
	Expression -> Expression . ">=" Expression          (rule 38)
	Expression -> Expression . "@" Expression           (rule 39)

	newline        reduce using rule 30
	";"            reduce using rule 30
	".."           reduce using rule 30
	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"*"            reduce using rule 30
	"/"            reduce using rule 30
	"%"            reduce using rule 30
	"^"            shift, and enter state 29
	"or"           reduce using rule 30
	"and"          reduce using rule 30
	"@"            reduce using rule 30
	"=="           reduce using rule 30
	"/="           reduce using rule 30
	"<"            reduce using rule 30
	">"            reduce using rule 30
	"<="           reduce using rule 30
	">="           reduce using rule 30
	%eof           reduce using rule 30


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 44
Number of terminals: 68
Number of non-terminals: 9
Number of states: 55
